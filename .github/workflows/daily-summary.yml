name: AI Summary - Business Week

on:
  schedule:
    - cron: '0 2 * * 2-6'  # 2:00 AM UTC, Tuesday through Saturday
  workflow_dispatch:

jobs:
  generate-summary:
    runs-on: ubuntu-latest
    timeout-minutes: 30

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.11'
        cache: 'pip'

    - name: Install Python dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    - name: Install Playwright browsers
      run: |
        playwright install chromium
        playwright install-deps chromium

    - name: Set environment variables
      run: |
        echo "SSL_CERT_FILE=$(python -c 'import certifi; print(certifi.where())')" >> $GITHUB_ENV
        echo "REQUESTS_CA_BUNDLE=$SSL_CERT_FILE" >> $GITHUB_ENV

    - name: Test setup
      env:
        OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
        SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
        SCRAPFLY_API_KEY: ${{ secrets.SCRAPFLY_API_KEY }}
      run: cd tests && python test_setup.py
      continue-on-error: true

    - name: Debug environment and time
      env:
        SCRAPFLY_API_KEY: ${{ secrets.SCRAPFLY_API_KEY }}
      run: |
        echo "Current UTC time: $(date -u)"
        echo "Scheduled run: Business week (Tue-Sat) at 2:00 AM UTC"
        echo "Timezone: $TZ"
        echo "Scrapfly key present: $([ -n '${{ secrets.SCRAPFLY_API_KEY }}' ] && echo 'YES' || echo 'NO')"
        cd scripts && python -c "
        from datetime import datetime, timezone, timedelta
        now = datetime.now(timezone.utc)
        print(f'Python UTC time: {now}')
        print(f'120h ago: {now - timedelta(hours=120)}')
        print(f'72h ago: {now - timedelta(hours=72)}')
        print(f'24h ago: {now - timedelta(hours=24)}')
        "

    - name: Run AI summary generator
      env:
        OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
        SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
        SCRAPFLY_API_KEY: ${{ secrets.SCRAPFLY_API_KEY }}
      run: cd scripts && python twitter_scraper_scrapfly.py
    - name: Upload logs on failure
      if: failure()
      uses: actions/upload-artifact@v4
      with:
        name: scraper-logs
        path: tweet_scraper.log
        retention-days: 7
